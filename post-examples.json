[
  {
    "topic": "def add(x,y):return x+y",
    "post": "def add(a: int, b: int) -> int:\n    \"\"\"Return the sum of two integers.\"\"\"\n    return a + b"
  },
  {
    "topic": "for i in range(0,len(items)):print(items[i])",
    "post": "for item in items:\n    print(item)"
  },
  {
    "topic": "def factorial(n):\n if n==0:return 1\n else: return n*factorial(n-1)",
    "post": "def factorial(n: int) -> int:\n    \"\"\"Return the factorial of n using recursion.\"\"\"\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)"
  },
  {
    "topic": "function getUser(data){if(data!=null){if(data.id){return data.id}else{return null}}else{return null}}",
    "post": "function getUserId(data) {\n  if (!data || !data.id) return null;\n  return data.id;\n}"
  },
  {
    "topic": "const numbers=[1,2,3,4,5];const doubled=[];for(let i=0;i<numbers.length;i++){doubled.push(numbers[i]*2)}console.log(doubled)",
    "post": "const numbers = [1, 2, 3, 4, 5];\nconst doubled = numbers.map(num => num * 2);\nconsole.log(doubled);"
  },
  {
    "topic": "function greet(name:string){if(name){console.log('Hello '+name)}else{console.log('Hello')}}",
    "post": "function greet(name?: string): void {\n  console.log(`Hello ${name ?? ''}`.trim());\n}"
  },
  {
    "topic": "let total=0;for(let i=0;i<prices.length;i++){total+=prices[i]}return total",
    "post": "return prices.reduce((sum, price) => sum + price, 0);"
  },
  {
    "topic": "if(user!=undefined&&user.isActive==true){console.log('Active')}else{console.log('Inactive')}",
    "post": "console.log(user?.isActive ? 'Active' : 'Inactive');"
  },
  {
    "topic": "const fs=require('fs');fs.readFile('file.txt','utf8',function(err,data){if(err)throw err;console.log(data)});",
    "post": "import { readFile } from 'fs';\n\nreadFile('file.txt', 'utf8', (err, data) => {\n  if (err) throw err;\n  console.log(data);\n});"
  },
  {
    "topic": "app.get('/users',function(req,res){db.findAll('users').then(function(users){res.json(users)})})",
    "post": "app.get('/users', async (req, res) => {\n  const users = await db.findAll('users');\n  res.json(users);\n});"
  },
  {
    "topic": "ngOnInit(){this.http.get('api/data').subscribe(data=>{this.data=data})}",
    "post": "ngOnInit() {\n  this.http.get('api/data').subscribe({\n    next: (data) => this.data = data,\n    error: (err) => console.error('Error loading data', err)\n  });\n}"
  },
  {
    "topic": "getUserName(user:any){if(user&&user.profile&&user.profile.name){return user.profile.name}else{return 'Guest'}}",
    "post": "getUserName(user: any): string {\n  return user?.profile?.name ?? 'Guest';\n}"
  },
  {
    "topic": "updateCount(count){if(count==null||count==undefined){count=0}this.count=count+1}",
    "post": "updateCount(count?: number): void {\n  this.count = (count ?? 0) + 1;\n}"
  },
  {
    "topic": "if(status==='open'||status==='pending'||status==='waiting'){return true}else{return false}",
    "post": "return ['open', 'pending', 'waiting'].includes(status);"
  },
  {
    "topic": "items.filter(function(x){return x.active}).map(function(x){return x.name})",
    "post": "items.filter(x => x.active).map(x => x.name);"
  }
]
